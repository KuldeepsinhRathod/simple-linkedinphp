#summary Changes (by version) to the SimpleLinkedIn PHP library.
#labels Phase-Implementation,Featured

= ChangeLog =

==Version 3.1.1==

===Core===

*New*

  * Added `closeJob()` method, used to close jobs that the user has previously posted - this can only be used with the private Job Posting API.
  * Added `editJob()` method, used to edit jobs that the user has previously posted - this can only be used with the private Job Posting API.
  * Added `lastRequestHeader()` debugging/informational method, used to retrieve the last header passed by the class to LinkedIn.
  * Added `lastRequestUrl()` debugging/informational method, used to retrieve the last URL used by the class to communicate with LinkedIn.
  * Added `postJob()` method, used to post jobs - this can only be used with the private Job Posting API.
  * Added `renewJob()` method, used to renew jobs that the user has previously posted - this can only be used with the private Job Posting API. 

*Miscellaneous*

  * Added internal data/parameter checking to all methods.

==Version 3.1.0==

===Core===

*New*

  * Added `bookmarkJob()` method, used to bookmark an existing job.
  * Added `bookmarkedJobs()` method, used to retrieve a user's bookmarked jobs.
  * Added `company()` method, used to retrieve detailed information about a specific company.
  * Added `companyProducts()` method, used to retrieve the products of a specific company.
  * Added `followCompany()` method, used to follow a company.
  * Added `followedCompanies()` method, used to retrieve a user's followed companies.
  * Added `job()` method, used to retrieve detailed job information.
  * Added `searchCompanies()` method, used to search companies on LinkedIn.
  * Added `searchJobs()` method, used to search jobs on LinkedIn.
  * Added `searchPeople()` method, used to search people on LinkedIn.
  * Added `suggestedCompanies()` method, used to retrieve LinkedIn's suggested companies for the user.
  * Added `suggestedJobs()` method, used to retrieve LinkedIn's suggested jobs for the user.
  * Added `unbookmarkJob()` method, used to unbookmark an existing job.
  * Added `unfollowCompany()` method, used to unfollow a company.

*Changes*

  * Deprecated `search()` method, replaced by `searchPeople()`. The deprecated search() method will be removed in a future version of the library.
  * Protected `fetch()` method modified, with throttle-triggered exception now reporting the endpoint that has triggered a throttle limit.

===Demo===

  * Demo scripts now support use of non-standard port numbers for those that are running the scripts on different ports.

==Version 3.0.2==

===Demo===

*Miscellaneous*

  * Changed demo scripts from hard-coded `http` callback protocol to use protocol auto-determination, supporting both `http` and `https`.

==Version 3.0.1==

===Core===

*Miscellaneous*

  * Updated `_URL_AUTH` class constant, changing to the new 'authenticate' endpoint that allows for automatic authentication in certain circumstances. See this [https://developer.linkedin.com/blog/ LinkedIn Developer's Blog] [https://developer.linkedin.com/blog/oauth-now-authentication entry] for more details.

==Version 3.0.0==

While there haven't been any new features added to the library, we've rolled out version 3.0.0 as a completely new major release due to the following changes:

  * The code has been completely re-factored, including camelCasing the method calls where needed;
  * Streamlined the libraries interaction with the stand-alone OAuth library, and;
  * Increased portability by moving the API tokens outside of the library itself... this allows you, for instance, to make use of the same Simple-LinkedIn file for multiple projects, rather than a single project. This change resulted in a change to the class constructor; please see the demo script and source for more detail.

Other minor enhancements include:

  * Adding an 'oauth' component to the libraries API call responses to aid in debugging:
{{{
$response = array(
  'info'     => Connection information from cURL,
  'linkedin' => LinkedIn response,
  'oauth'    => The OAuth string and header sent with the request,
  'success'  => Boolean indicating method success
);
}}}
  * Fixed a bug in the share() method related to improper encoding of characters.

As always, have at the [http://simplelinkedin.fiftymission.net demo site] to see it in action. Let me know if you have any issues.

==Version 2.1.0==

The latest version of the library makes changes to the $response variable from many calls, standardizing them across all methods. Where some methods returned boolean and others an array containing LinkedIn response and connection information, all methods now return an array containing the LinkedIn response, connection information, and a third element containing method/function success.

The format is as follows:

{{{
$response = array(
  'info'     => Connection information from cURL,
  'linkedin' => LinkedIn response,
  'success'  => Boolean indicating method success
);
}}}

This was done to enable access to full response data from LinkedIn from all methods, and also to reduce your need to parse and check each LinkedIn response for specific success parameters, such as an HTTP 200 or 201 response. The library handles all of this, allowing you to simplify success verification to:

{{{
$response = $LINKEDIN->some_action();
if($response['success']) {
  // proceed as needed
} else {
  // handle errors
}
}}}

Updates to this version:
  
  # Added ability to like, unlike, and comment on connection shares via new like(), unlike(), likes(), comment(), comments() methods;
  # Per LinkedIn's new data features, implemented system to allow you to specify the format you would like the LinkedIn response in; XML (default), JSON or JSONP.  This is achieved via a call to LINKEDIN->set_response_format(format), where format can be set using the class constants (LINKEDIN::_RESPONSE_JSON, LINKEDIN::_RESPONSE_JSONP, LINKEDIN::_RESPONSE_XML).  The default format, matching the LinkedIn API is XML, and if you wish to use XML you do not need to worry about setting the response type.
  # Increased method parameter checking and error handling capabilities.
  # Library now verifies that the conflicting PECL OAuth extension is not installed before instantiating.

==Version 2.0.1==

===Core===

*New*

  * Added `_API_DEV_MODE` class constant, which is set to `TRUE`, will use the two new 'development' API application key class constants.
  * Added `_API_DEV_KEY` class constant, used to store the 'development' API application key.
  * Added `_API_DEV_SECRET` class constant, used to store the 'development' API application secret.

*Changes*

  * Modified `send_request()` to return the original OAuth request that the class sends to LinkedIn.

==Version 2.0.0==

===Core===

*New*

  * Added `invite()` method, used to send out network invitations by both email and LinkedIn member token.
  * Added static `is_id()` method, used to check format of a given LinkedIn member token.
  * Added `search()` method, used to search people on LinkedIn.
  * Added `share()` method, used to share and re-share content.
  * Added `statistics()` method, used to retrieve the current user's network graph.

*Changes*

  * Refactored code, implemented new constructor with additional parameters.

*Miscellaneous*

  * Integrated `is_throttled()` method into every call to LinkedIn, raises an exception if application request has been throttled.

==Version 1.2.0==

===Core===

*New*

  * Added `connections()` method, used to retrieve LinkedIn user connections.
  * Added `connection_message()` method, used to send messages from the current user to their connections.

==Version 1.1.1==

===Core===

*New*

  * Added static `is_throttled()` method, used to check the LinkedIn response and return TRUE/FALSE depending on the throttling state.